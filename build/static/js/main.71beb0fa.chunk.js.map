{"version":3,"sources":["Form.js","Header.js","List.js","App.js","index.js"],"names":["Form","props","useState","description","setDescription","errorMessage","setErrorMessage","addTask","trim","error","verifyInput","className","type","value","onKeyDown","event","key","onChange","target","placeholder","onClick","Header","listClassName","setListClassName","setActive","listId","newListClassName","setCurrentList","today","Date","getDay","getMonth","getDate","activeTask","List","currentList","list","length","map","el","index","id","moveTask","xmlns","width","height","fill","cx","cy","r","stroke","d","removeTask","defaultProps","App","setList","currentId","setCurrentId","copy2DArray","arr","result","i","push","task","removeElementIn2DArray","row","col","j","pop","newList","li","findTask","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAqDeA,MAlDf,SAAcC,GAAQ,IAAD,EACmBC,mBAAS,IAD5B,mBACZC,EADY,KACCC,EADD,OAEqBF,mBAAS,MAF9B,mBAEZG,EAFY,KAEEC,EAFF,KAcnB,SAASC,EAAQJ,GACfA,EAAcA,EAAYK,OAE1B,IAAIC,EAAQR,EAAMS,YAAYP,GACzBM,EAKHH,EAAgBG,IAJhBH,EAAgB,MAChBL,EAAMM,QAAQJ,GACdC,EAAe,KAMnB,OACE,yBAAKO,UAAU,YACb,yBAAKA,UAAU,QACb,2BACEC,KAAK,OACLC,MAAOV,EACPW,UAzBR,SAAuBC,GACH,UAAdA,EAAMC,KACRT,EAAQJ,IAwBJc,SA9BR,SAAsBF,GACpBX,EAAeW,EAAMG,OAAOL,QA8BtBM,YAAY,oBAEd,4BAAQC,QAAS,kBAAMb,EAAQJ,KAA/B,aAGF,yBAAKQ,UAAU,YAAYN,KC4BlBgB,MAnEf,SAAgBpB,GAAQ,IAAD,EACqBC,mBAAS,CAAC,cAAe,SAD9C,mBACdoB,EADc,KACCC,EADD,KA0BrB,SAASC,EAAUC,GACjB,IAAIC,EAAmB,GACvBA,EAAiBD,GAAU,cAC3BC,EAA0B,EAATD,GAAc,OAE/BF,EAAiBG,GACjBzB,EAAM0B,eAAeF,GAGvB,IAAMG,EAAQ,IAAIC,KAClB,OACE,gCACE,yBAAKlB,UAAU,UACb,yBAAKA,UAAU,QArCJ,CACf,SACA,SACA,UACA,YACA,WACA,SACA,YA+BgBiB,EAAME,UADlB,KA5Ba,CACjB,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAiB8CF,EAAMG,YAAa,IAC1DH,EAAMI,WAET,6BACE,yBAAKrB,UAAWW,EAAc,GAAIF,QAAS,kBAAMI,EAAU,KAA3D,oBAGA,yBAAKb,UAAWW,EAAc,GAAIF,QAAS,kBAAMI,EAAU,KAA3D,qBAMJ,yBAAKb,UAAU,eAAeV,EAAMgC,WAApC,iBAEA,kBAAC,EAAD,CAAMvB,YAAaT,EAAMS,YAAaH,QAASN,EAAMM,YCxD3D,SAAS2B,EAAKjC,GACZ,OAA0B,IAAtBA,EAAMkC,aAA2C,IAAtBlC,EAAMmC,KAAKC,OAEtC,4BACE,4BACE,yBAAK1B,UAAU,eAAf,sBACqB,0BAAMA,UAAU,QAAhB,KADrB,wCAUN,4BACGV,EAAMmC,KAAKE,KAAI,SAACC,EAAIC,GACnB,OACE,wBAAIxB,IAAKuB,EAAGE,IACV,4BACE9B,UAAU,UACVS,QAAS,kBAAMnB,EAAMyC,SAASzC,EAAMkC,YAAaK,KAEjD,yBACEG,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,KAAK,QAEL,4BAAQC,GAAG,MAAMC,GAAG,MAAMC,EAAE,IAAIC,OAAO,YACvC,0BACEJ,KAAK,UACLK,EAAE,yGAIR,yBAAKxC,UAAU,eAAe4B,EAAGpC,aACjC,4BACEQ,UAAU,YACVS,QAAS,kBAAMnB,EAAMmD,WAAWnD,EAAMkC,YAAaK,KAEnD,yBACEG,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,KAAK,QAEL,0BACEA,KAAK,UACLK,EAAE,wSAEJ,0BACEL,KAAK,UACLK,EAAE,wOAWpBjB,EAAKmB,aAAe,CAClBlB,YAAa,GAUAD,Q,MCqCAoB,MA9Gf,WAAgB,IAAD,EACWpD,mBAAS,CAAC,GAAI,KADzB,mBACNkC,EADM,KACAmB,EADA,OAEyBrD,mBAAS,GAFlC,mBAENiC,EAFM,KAEOR,EAFP,OAGqBzB,mBAAS,GAH9B,mBAGNsD,EAHM,KAGKC,EAHL,KAiCb,SAASC,EAAYC,GAEnB,IADA,IAAIC,EAAS,GACJC,EAAI,EAAGA,EAAIF,EAAItB,OAAQwB,IAAK,CACnCD,EAAOE,KAAK,IADuB,oBAElBH,EAAIE,IAFc,IAEnC,2BAAyB,CAAC,IAAjBE,EAAgB,QACvBH,EAAOC,GAAGC,KAAV,eAAoBC,KAHa,+BAMrC,OAAOH,EAGT,SAASI,EAAuBL,EAAKM,EAAKC,GACxC,IAAK,IAAIC,EAAID,EAAKC,EAAIR,EAAIM,GAAK5B,OAAS,EAAG8B,IACzCR,EAAIM,GAAKE,GAAKR,EAAIM,GAAKE,EAAI,GAE7BR,EAAIM,GAAKG,MAyCX,OACE,yBAAKzD,UAAU,OACb,yBAAKA,UAAU,aACb,kBAAC,EAAD,CACEgB,eAAgBA,EAChBM,WAAYG,EAAK,GAAGC,OACpB9B,QA5CR,SAAiBJ,GAEf,IAAIkE,EAAUX,EAAYtB,GAG1BiC,EAAQ,GAAGP,KAAK,CAAErB,GAAIe,EAAWrD,gBAGjCoD,EAAQc,GACRZ,EAAaD,EAAY,IAoCnB9C,YA/ER,SAAqBP,GACnB,MAAoB,KAAhBA,EACK,yBAdX,SAAkBA,GAAc,IAAD,gBACdiC,GADc,IAC7B,2BAAqB,CAAC,IAAD,EAAZkC,EAAY,sBACFA,GADE,IACnB,2BAAqB,CACnB,GADmB,QACVnE,cAAgBA,EACvB,OAAO,GAHQ,gCADQ,8BAS7B,OAAO,EAQHoE,CAASpE,GACJ,2BAGF,QAyEH,kBAAC,EAAD,CACEiC,KAtECA,EAAKD,GAuENA,YAAaA,EACbO,SA5BR,SAAkBP,EAAaK,GAE7B,IAAIuB,EAAI,eAAQ3B,EAAKD,GAAaK,IAG9B6B,EAAUX,EAAYtB,GAG1B4B,EAAuBK,EAASlC,EAAaK,GAG7C6B,EAAsB,EAAdlC,GAAiB2B,KAAKC,GAC9BR,EAAQc,IAiBFjB,WAxCR,SAAoBjB,EAAaK,GAE/B,IAAI6B,EAAUX,EAAYtB,GAG1B4B,EAAuBK,EAASlC,EAAaK,GAG7Ce,EAAQc,SCvEZG,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.71beb0fa.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction Form(props) {\n  const [description, setDescription] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  function handleChange(event) {\n    setDescription(event.target.value);\n  }\n\n  function handleKeyDown(event) {\n    if (event.key === \"Enter\") {\n      addTask(description);\n    }\n  }\n\n  function addTask(description) {\n    description = description.trim();\n\n    let error = props.verifyInput(description);\n    if (!error) {\n      setErrorMessage(null);\n      props.addTask(description);\n      setDescription(\"\");\n    } else {\n      setErrorMessage(error);\n    }\n  }\n\n  return (\n    <div className=\"taskForm\">\n      <div className=\"form\">\n        <input\n          type=\"text\"\n          value={description}\n          onKeyDown={handleKeyDown}\n          onChange={handleChange}\n          placeholder=\"Enter a task...\"\n        ></input>\n        <button onClick={() => addTask(description)}>Add Task</button>\n      </div>\n\n      <div className=\"errorMsg\">{errorMessage}</div>\n    </div>\n  );\n}\n\nForm.propTypes = {\n  verifyInput: PropTypes.func.isRequired,\n  addTask: PropTypes.func.isRequired,\n};\n\nexport default Form;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Form from \"./Form\";\n\nfunction Header(props) {\n  const [listClassName, setListClassName] = useState([\"link active\", \"link\"]);\n  const dayNames = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ];\n  const monthNames = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n  function setActive(listId) {\n    let newListClassName = [];\n    newListClassName[listId] = \"link active\";\n    newListClassName[listId ^ 1] = \"link\";\n\n    setListClassName(newListClassName);\n    props.setCurrentList(listId);\n  }\n\n  const today = new Date();\n  return (\n    <header>\n      <div className=\"header\">\n        <div className=\"date\">\n          {dayNames[today.getDay()]}, {monthNames[today.getMonth()]}{\" \"}\n          {today.getDate()}\n        </div>\n        <nav>\n          <div className={listClassName[0]} onClick={() => setActive(0)}>\n            Incomplete Tasks\n          </div>\n          <div className={listClassName[1]} onClick={() => setActive(1)}>\n            Completed Tasks\n          </div>\n        </nav>\n      </div>\n\n      <div className=\"activeTasks\">{props.activeTask} Active Tasks</div>\n\n      <Form verifyInput={props.verifyInput} addTask={props.addTask} />\n    </header>\n  );\n}\n\nHeader.propTypes = {\n  setCurrentList: PropTypes.func.isRequired,\n  verifyInput: PropTypes.func.isRequired,\n  addTask: PropTypes.func.isRequired,\n  activeTask: PropTypes.func.isRequired,\n};\n\nexport default Header;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction List(props) {\n  if (props.currentList === 0 && props.list.length === 0) {\n    return (\n      <ul>\n        <li>\n          <div className=\"description\">\n            You currently have <span className=\"blue\">0</span> tasks. Add a task\n            to get started!\n          </div>\n        </li>\n      </ul>\n    );\n  }\n\n  return (\n    <ul>\n      {props.list.map((el, index) => {\n        return (\n          <li key={el.id}>\n            <button\n              className=\"tickBtn\"\n              onClick={() => props.moveTask(props.currentList, index)}\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"19\"\n                height=\"19\"\n                fill=\"none\"\n              >\n                <circle cx=\"9.5\" cy=\"9.5\" r=\"9\" stroke=\"#8D9196\"></circle>\n                <path\n                  fill=\"#8D9196\"\n                  d=\"M14 6.5a.6.6 0 0 0-.7 0l-5 4.9-2.6-2.6a.6.6 0 0 0-.7.8l3 3a.6.6 0 0 0 .7 0L14 7.1c.3-.2.3-.5 0-.7z\"\n                ></path>\n              </svg>\n            </button>\n            <div className=\"description\">{el.description}</div>\n            <button\n              className=\"removeBtn\"\n              onClick={() => props.removeTask(props.currentList, index)}\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"19\"\n                height=\"19\"\n                fill=\"none\"\n              >\n                <path\n                  fill=\"#8D9196\"\n                  d=\"M17.4 2.7h-4v-.6c0-1.2-.9-2.1-2-2.1H7.6a2 2 0 0 0-2 2v.7h-4c-.3 0-.5.3-.5.6s.2.5.5.5h1v12.4c0 1.5 1.2 2.8 2.8 2.8h8.2c1.6 0 2.9-1.3 2.9-2.8V3.8h1c.2 0 .4-.2.4-.5s-.2-.6-.5-.6zM6.6 2.1c0-.6.5-1 1-1h3.8c.5 0 1 .4 1 1v.6H6.6v-.6zm8.8 14c0 1-.8 1.8-1.8 1.8H5.4c-1 0-1.8-.7-1.8-1.7V3.8h11.8v12.4z\"\n                ></path>\n                <path\n                  fill=\"#8D9196\"\n                  d=\"M9.5 16c.3 0 .5-.2.5-.5V6.2c0-.3-.2-.5-.5-.5s-.5.2-.5.5v9.3c0 .3.2.6.5.6zM6 15.5c.4 0 .6-.3.6-.6V6.8c0-.3-.2-.5-.5-.5s-.6.2-.6.5v8.1c0 .3.3.6.6.6zM13 15.5c.2 0 .5-.3.5-.6V6.8c0-.3-.3-.5-.6-.5s-.5.2-.5.5v8.1c0 .3.2.6.5.6z\"\n                ></path>\n              </svg>\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nList.defaultProps = {\n  currentList: 0,\n};\n\nList.propTypes = {\n  moveTask: PropTypes.func.isRequired,\n  removeTask: PropTypes.func.isRequired,\n  list: PropTypes.array.isRequired,\n  currentList: PropTypes.number,\n};\n\nexport default List;\n","import React, { useState } from \"react\";\nimport Header from \"./Header\";\nimport List from \"./List\";\nimport \"./App.css\";\n\nfunction App() {\n  const [list, setList] = useState([[], []]);\n  const [currentList, setCurrentList] = useState(0);\n  const [currentId, setCurrentId] = useState(0);\n\n  function findTask(description) {\n    for (let li of list) {\n      for (let task of li) {\n        if (task.description === description) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  function verifyInput(description) {\n    if (description === \"\") {\n      return \"Please enter in a task\";\n    }\n\n    if (findTask(description)) {\n      return \"This task already exists\";\n    }\n\n    return null;\n  }\n\n  function getCurrentList() {\n    return list[currentList];\n  }\n\n  function copy2DArray(arr) {\n    let result = [];\n    for (let i = 0; i < arr.length; i++) {\n      result.push([]);\n      for (let task of arr[i]) {\n        result[i].push({ ...task });\n      }\n    }\n    return result;\n  }\n\n  function removeElementIn2DArray(arr, row, col) {\n    for (let j = col; j < arr[row].length - 1; j++) {\n      arr[row][j] = arr[row][j + 1];\n    }\n    arr[row].pop();\n  }\n\n  function addTask(description) {\n    //copy original list\n    let newList = copy2DArray(list);\n\n    //add task to the incomplete list\n    newList[0].push({ id: currentId, description });\n\n    //set new list\n    setList(newList);\n    setCurrentId(currentId + 1);\n  }\n\n  function removeTask(currentList, index) {\n    //copy original list\n    let newList = copy2DArray(list);\n\n    //remove task\n    removeElementIn2DArray(newList, currentList, index);\n\n    //set new list\n    setList(newList);\n  }\n\n  function moveTask(currentList, index) {\n    //copy this task\n    let task = { ...list[currentList][index] };\n\n    //copy the original array\n    let newList = copy2DArray(list);\n\n    //remove it from current list\n    removeElementIn2DArray(newList, currentList, index);\n\n    //add it to the other list\n    newList[currentList ^ 1].push(task);\n    setList(newList);\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <Header\n          setCurrentList={setCurrentList}\n          activeTask={list[0].length}\n          addTask={addTask}\n          verifyInput={verifyInput}\n        />\n\n        <List\n          list={getCurrentList()}\n          currentList={currentList}\n          moveTask={moveTask}\n          removeTask={removeTask}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}