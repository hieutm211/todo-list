{"version":3,"sources":["App.js","index.js"],"names":["Header","props","useState","incompClassName","setIncompClassName","compClassName","setCompClassName","setActive","listId","today","Date","className","getDay","getMonth","getDate","to","onClick","activeTask","Form","verify","addTask","useStateWithLocalStorage","description","setDescription","errorMessage","setErrorMessage","trim","error","type","value","onKeyDown","event","key","onChange","target","placeholder","List","map","el","id","moveTask","xmlns","width","height","fill","cx","cy","r","stroke","d","removeTask","localStorageKey","initalValue","JSON","parse","localStorage","getItem","setValue","useEffect","setItem","stringify","App","incompleteList","setIncompleteList","completedList","setCompletedList","currentId","setCurrentId","getList","findTaskWithId","result","forEach","element","index","list","newList","push","task","length","findTask","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qSASA,SAASA,EAAOC,GAAQ,IAAD,EACyBC,mBAAS,eADlC,mBACdC,EADc,KACGC,EADH,OAEqBF,mBAAS,QAF9B,mBAEdG,EAFc,KAECC,EAFD,KAMrB,SAASC,EAAUC,GACbA,GACFJ,EAAmB,QACnBE,EAAiB,iBAEjBF,EAAmB,eACnBE,EAAiB,SAIrB,IAAMG,EAAQ,IAAIC,KAClB,OACE,gCACE,yBAAKC,UAAU,UACb,yBAAKA,UAAU,QAjBJ,CAAC,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YAkBlEF,EAAMG,UADlB,KAhBa,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YAiBlFH,EAAMI,YADhD,IAC8DJ,EAAMK,WAEpE,6BACE,kBAAC,IAAD,CAAMC,GAAG,IAAIJ,UAAWR,EAAiBa,QAAS,kBAAMT,EAAU,KAAlE,oBACA,kBAAC,IAAD,CAAMQ,GAAG,aAAaJ,UAAWN,EAAeW,QAAS,kBAAMT,EAAU,KAAzE,qBAIJ,yBAAKI,UAAU,eAAeV,EAAMgB,WAApC,iBAEA,kBAACC,EAAD,CAAMC,OAAQlB,EAAMkB,OAAQC,QAASnB,EAAMmB,WAKjD,SAASF,EAAKjB,GAAQ,IAAD,EACmBoB,EAAyB,eAD5C,mBACZC,EADY,KACCC,EADD,OAEqBrB,mBAAS,MAF9B,mBAEZsB,EAFY,KAEEC,EAFF,KAcnB,SAASL,EAAQE,GACfA,EAAcA,EAAYI,OAE1B,IAAIC,EAAQ1B,EAAMkB,OAAOG,GACpBK,EAKHF,EAAgBE,IAJhBF,EAAgB,MAChBxB,EAAMmB,QAAQE,GACdC,EAAe,KAMnB,OACE,yBAAKZ,UAAU,YACb,yBAAKA,UAAU,QACX,2BAAOiB,KAAK,OAAOC,MAAOP,EAAaQ,UAtB/C,SAAuBC,GACH,UAAdA,EAAMC,KACRZ,EAAQE,IAoB6DW,SA1BzE,SAAsBF,GACpBR,EAAeQ,EAAMG,OAAOL,QAyBmEM,YAAY,oBACrG,4BAAQnB,QAAS,kBAAMI,EAAQE,KAA/B,aAGJ,yBAAKX,UAAU,YACZa,IAMT,SAASY,EAAKnC,GACZ,OACE,4BACGA,EAAM4B,MAAMQ,KAAI,SAACC,GAChB,OACE,wBAAIN,IAAKM,EAAGC,IACV,4BAAQ5B,UAAU,UAAUK,QAAS,kBAAMf,EAAMuC,SAASF,EAAGC,MAC3D,yBACEE,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,KAAK,QACH,4BAAQC,GAAG,MAAMC,GAAG,MAAMC,EAAE,IAAIC,OAAO,YACvC,0BACEJ,KAAK,UACLK,EAAE,yGAIV,yBAAKtC,UAAU,eAAe2B,EAAGhB,aACjC,4BAAQX,UAAU,YAAYK,QAAS,kBAAMf,EAAMiD,WAAWZ,EAAGC,MAC/D,yBACEE,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,KAAK,QACH,0BACEA,KAAK,UACLK,EAAE,wSAA6S,0BAAML,KAAK,UAAUK,EAAE,wOAiI1V,IAAM5B,EAA2B,SAAC8B,EAAiBC,GAAiB,IAAD,EACvClD,mBAASmD,KAAKC,MAAMC,aAAaC,QAAQL,KAAqBC,GAAe,IADtC,mBAC1DvB,EAD0D,KACnD4B,EADmD,KAOjE,OAJAC,qBAAU,WACRH,aAAaI,QAAQR,EAAiBE,KAAKO,UAAU/B,MACpD,CAACsB,EAAiBtB,IAEd,CAACA,EAAO4B,IAGFI,EAhIf,WAAgB,IAAD,EAC+BxC,EAAyB,iBAAkB,IAD1E,mBACNyC,EADM,KACUC,EADV,OAE6B1C,EAAyB,gBAAiB,IAFvE,mBAEN2C,EAFM,KAESC,EAFT,OAGqB5C,EAAyB,YAAa,GAH3D,mBAGN6C,EAHM,KAGKC,EAHL,KAiBb,SAASC,EAAQ7B,GACf,OAAOA,EAAKyB,EAAgBF,EAiB9B,SAASO,EAAe9B,GACtB,IAAI+B,EAAS,KAab,OAXAR,EAAeS,SAAQ,SAACC,EAASC,GAC3BD,EAAQjC,KAAOA,IACjB+B,EAAS,CAAC,EAAGG,OAGjBT,EAAcO,SAAQ,SAACC,EAASC,GAC1BD,EAAQjC,KAAOA,IACjB+B,EAAS,CAAC,EAAGG,OAIVH,EAQT,SAASpB,EAAWX,GAClB,IADsB,EAChB/B,EAAS6D,EAAe9B,GAAI,GAG9BmC,EAAON,EAAQ5D,GACfmE,EAAU,GALQ,cAOPD,GAPO,IAOtB,2BAAqB,CAAC,IAAbpC,EAAY,QACfA,EAAGC,KAAOA,GACZoC,EAAQC,KAAR,eAAiBtC,KATC,8BAaP,IAAX9B,EACFuD,EAAkBY,GAElBV,EAAiBU,GAIrB,SAASnC,EAASD,GAAK,IAAD,EACI8B,EAAe9B,GADnB,mBACb/B,EADa,KACLiE,EADK,KAGhBI,EAAOT,EAAQ5D,GAAQiE,GAG3BvB,EAAWX,GAGK,IAAX/B,EACFyD,EAAiB,GAAD,mBAAKD,GAAL,CAAoBa,KAEpCd,EAAkB,GAAD,mBAAKD,GAAL,CAAqBe,KAI3C,OACE,yBAAKlE,UAAU,OACb,yBAAKA,UAAU,aACb,kBAAC,IAAD,KACE,kBAACX,EAAD,CACEiB,WAAY6C,EAAegB,OAC3B1D,QA/CV,SAAiBE,GACfyC,EAAkB,GAAD,mBAAKD,GAAL,CAAqB,CAACvB,GAAI2B,EAAW5C,kBACtD6C,EAAaD,EAAU,IA8Cf/C,OA/FV,SAAgBG,GACd,MAAoB,KAAhBA,EACK,yBAcX,SAAkBA,GAWhB,OAVAwC,EAAeS,SAAQ,SAACC,EAASC,GAC/B,GAAID,EAAQlD,cAAgBA,EAC1B,MAAO,CAAC,EAAGmD,MAGfT,EAAcO,SAAQ,SAACC,EAASC,GAC9B,GAAID,EAAQlD,cAAgBA,EAC1B,MAAO,CAAC,EAAGmD,MAGR,KAtBHM,CAASjB,GACJ,2BAGF,QAyFD,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOkB,OAAK,EAACC,KAAK,KAChB,kBAAC7C,EAAD,CAAMP,MAAOiC,EAAgBtB,SAAUA,EAAUU,WAAYA,KAE/D,kBAAC,IAAD,CAAO+B,KAAK,cACV,kBAAC7C,EAAD,CAAMP,MAAOmC,EAAexB,SAAUA,EAAUU,WAAYA,UCpO1EgC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.3c4e8f2b.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from 'react-router-dom';\nimport './App.css';\n\nfunction Header(props) {\n  const [incompClassName, setIncompClassName] = useState('Link active');\n  const [compClassName, setCompClassName] = useState('Link'); \n  const dayNames = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n  const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  \n  function setActive(listId) {\n    if (listId) {\n      setIncompClassName('Link');\n      setCompClassName('Link active');\n    } else {\n      setIncompClassName('Link active');\n      setCompClassName('Link');\n    }\n  }\n\n  const today = new Date();\n  return (\n    <header>\n      <div className=\"header\">\n        <div className=\"date\">\n          {dayNames[today.getDay()]}, {monthNames[today.getMonth()]} {today.getDate()}\n        </div>\n        <nav>\n          <Link to=\"/\" className={incompClassName} onClick={() => setActive(0)}>Incomplete Tasks</Link>\n          <Link to=\"/completed\" className={compClassName} onClick={() => setActive(1)}>Completed Tasks</Link>\n        </nav>\n      </div>\n        \n      <div className=\"activeTasks\">{props.activeTask} Active Tasks</div>\n\n      <Form verify={props.verify} addTask={props.addTask}/>\n    </header>\n  );\n}\n\nfunction Form(props) {\n  const [description, setDescription] = useStateWithLocalStorage('description');\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  function handleChange(event) {\n    setDescription(event.target.value);\n  }\n\n  function handleKeyDown(event) {\n    if (event.key === 'Enter') {\n      addTask(description);\n    }\n  }\n\n  function addTask(description) {\n    description = description.trim();\n\n    let error = props.verify(description);\n    if (!error) {\n      setErrorMessage(null);\n      props.addTask(description);\n      setDescription('');\n    } else {\n      setErrorMessage(error);\n    }\n  }\n\n  return (\n    <div className=\"taskForm\"> \n      <div className=\"form\">\n          <input type=\"text\" value={description} onKeyDown={handleKeyDown} onChange={handleChange} placeholder=\"Enter a task...\"></input>\n          <button onClick={() => addTask(description)}>Add Task</button>  \n      </div>\n\n      <div className=\"errorMsg\">\n        {errorMessage}\n      </div>\n    </div>\n  );\n}\n\nfunction List(props) {\n  return (\n    <ul>\n      {props.value.map((el) => {\n        return (\n          <li key={el.id}>\n            <button className=\"tickBtn\" onClick={() => props.moveTask(el.id) }>\n              <svg \n                xmlns=\"http://www.w3.org/2000/svg\" \n                width=\"19\" \n                height=\"19\" \n                fill=\"none\">\n                  <circle cx=\"9.5\" cy=\"9.5\" r=\"9\" stroke=\"#8D9196\"></circle>\n                  <path \n                    fill=\"#8D9196\" \n                    d=\"M14 6.5a.6.6 0 0 0-.7 0l-5 4.9-2.6-2.6a.6.6 0 0 0-.7.8l3 3a.6.6 0 0 0 .7 0L14 7.1c.3-.2.3-.5 0-.7z\">\n                  </path>\n              </svg>\n            </button>\n            <div className=\"description\">{el.description}</div>\n            <button className=\"removeBtn\" onClick={() => props.removeTask(el.id) }>\n              <svg \n                xmlns=\"http://www.w3.org/2000/svg\" \n                width=\"19\" \n                height=\"19\" \n                fill=\"none\">\n                  <path \n                    fill=\"#8D9196\" \n                    d=\"M17.4 2.7h-4v-.6c0-1.2-.9-2.1-2-2.1H7.6a2 2 0 0 0-2 2v.7h-4c-.3 0-.5.3-.5.6s.2.5.5.5h1v12.4c0 1.5 1.2 2.8 2.8 2.8h8.2c1.6 0 2.9-1.3 2.9-2.8V3.8h1c.2 0 .4-.2.4-.5s-.2-.6-.5-.6zM6.6 2.1c0-.6.5-1 1-1h3.8c.5 0 1 .4 1 1v.6H6.6v-.6zm8.8 14c0 1-.8 1.8-1.8 1.8H5.4c-1 0-1.8-.7-1.8-1.7V3.8h11.8v12.4z\"></path><path fill=\"#8D9196\" d=\"M9.5 16c.3 0 .5-.2.5-.5V6.2c0-.3-.2-.5-.5-.5s-.5.2-.5.5v9.3c0 .3.2.6.5.6zM6 15.5c.4 0 .6-.3.6-.6V6.8c0-.3-.2-.5-.5-.5s-.6.2-.6.5v8.1c0 .3.3.6.6.6zM13 15.5c.2 0 .5-.3.5-.6V6.8c0-.3-.3-.5-.6-.5s-.5.2-.5.5v8.1c0 .3.2.6.5.6z\">\n                  </path>\n                </svg>\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nfunction App() {\n  const [incompleteList, setIncompleteList] = useStateWithLocalStorage('incompleteList', []);\n  const [completedList, setCompletedList] = useStateWithLocalStorage('completedList', []);\n  const [currentId, setCurrentId] = useStateWithLocalStorage('currentId', 1);\n\n  function verify(description) {\n    if (description === \"\") {\n      return \"Please enter in a task\";\n    }\n\n    if (findTask(incompleteList, description)) {\n      return \"This task already exists\";\n    }\n\n    return null;\n  }\n\n  function getList(id) {\n    return id ? completedList : incompleteList;\n  }\n\n  function findTask(description) {\n    incompleteList.forEach((element, index) => {\n      if (element.description === description) {\n        return [0, index];\n      }\n    });\n    completedList.forEach((element, index) => {\n      if (element.description === description) {\n        return [1, index];\n      }\n    });\n    return null;\n  }\n\n  function findTaskWithId(id) {\n    let result = null;\n\n    incompleteList.forEach((element, index) => {\n      if (element.id === id) {\n        result = [0, index];\n      }\n    });\n    completedList.forEach((element, index) => {\n      if (element.id === id) {\n        result = [1, index];\n      }\n    });\n\n    return result;\n  }\n\n  function addTask(description) {\n    setIncompleteList([...incompleteList, {id: currentId, description}]);\n    setCurrentId(currentId+1);\n  }\n\n  function removeTask(id) {\n    const listId = findTaskWithId(id)[0];\n    \n  \n    let list = getList(listId);\n    let newList = [];\n    \n    for (let el of list) {\n      if (el.id !== id) {\n        newList.push({...el});\n      }\n    }\n\n    if (listId === 0) {\n      setIncompleteList(newList);\n    } else {\n      setCompletedList(newList);\n    }\n  }\n\n  function moveTask(id) {\n    const [listId, index] = findTaskWithId(id);\n    //copy this task\n    let task = getList(listId)[index];\n\n    //remove it from current list\n    removeTask(id);\n\n    //add it to the other list\n     if (listId === 0) {\n       setCompletedList([...completedList, task]);\n    } else {\n       setIncompleteList([...incompleteList, task]);\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <Router>\n          <Header \n            activeTask={incompleteList.length} \n            addTask={addTask} \n            verify={verify}\n          />\n\n          <Switch>\n            <Route exact path=\"/\">\n              <List value={incompleteList} moveTask={moveTask} removeTask={removeTask}/>\n            </Route>\n            <Route path=\"/completed\">\n              <List value={completedList} moveTask={moveTask} removeTask={removeTask}/>\n            </Route>\n          </Switch>\n          \n        </Router>\n      </div>\n    </div>\n  );\n}\n\nconst useStateWithLocalStorage = (localStorageKey, initalValue) => {\n  const [value, setValue] = useState(JSON.parse(localStorage.getItem(localStorageKey)) || initalValue || '');\n\n  useEffect(()=> {\n    localStorage.setItem(localStorageKey, JSON.stringify(value))\n  }, [localStorageKey, value]);\n\n  return [value, setValue];\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}